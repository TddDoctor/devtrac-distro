<?php 

/**
 * @file
 * Testing picture upload scenerio.
 **/
module_load_include('test', 'simpletest_clone');

class CustomTestingExtensionCase extends SimpleTestCloneTestCase {
  protected $unicef_user;
  public static function getInfo() {
    return array(
      'name' => 'DevTrac User creates fieldtrip extended tests',
      'description' => t('Testing the user creates fieldtrip extended tests.'),
    		'group' => 'Devtrac',
   
	);
  }

	/**
	 * Log in a user with the internal browser.
	 *
	 * If a user is already logged in, then the current user is logged out before
	 * logging in the specified user.
	 *
	 * Please note that neither the global $user nor the passed in user object is
	 * populated with data of the logged in user. If you need full access to the
	 * user object after logging in, it must be updated manually. If you also need
	 * access to the plain-text password of the user (set by drupalCreateUser()),
	 * e.g. to login the same user again, then it must be re-assigned manually.
	 * For example:
	 * @code
	 *   // Create a user.
	 *   $account = $this->drupalCreateUser(array());
	 *   $this->drupalLogin($account);
	 *   // Load real user object.
	 *   $pass_raw = $account->pass_raw;
	 *   $account = user_load($account->uid);
	 *   $account->pass_raw = $pass_raw;
	 * @endcode
	 *
	 * @param $user
	 *   User object representing the user to login.
	 *
	 * @see drupalCreateUser()
	 */
	protected function drupalLogin(stdClass $user) {
		if ($this->loggedInUser) {
			$this->drupalLogout();
		}
	
		$edit = array(
				'name' => $user->name,
				'pass' => $user->pass_raw
		);
		$this->drupalPost('user', $edit, t('Log in'));
	
		// If a "log out" link appears on the page, it is almost certainly because
		// the login was successful.
		$pass = $this->assertLink(t('Sign out'), 0, t('User %name successfully logged in.', array('%name' => $user->name)), t('User login'));
	
		if ($pass) {
			$this->loggedInUser = $user;
		}
	}
	
	public function setUp() {
		parent::setUp();
		$this->unicef_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules', 'create taxonomy_vocabulary_6', 'create taxonomy_vocabulary_8'));
		$this->drupalLogin($this->unicef_user);
		$this->assertNoText(t('Overview'), t('User is successifuly logged in'), 'Devtrac');
		//
		$this->drupalPost('user/' . $this->unicef_user->uid . '/edit', array("roles[5]" => 5, 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_firstname[und][0][value]' => 'firstname', 'field_user_surname[und][0][value]' => 'lname', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'name' =>'tester', 'field_user_superior[und][0][target_id]' => 'Jan van Diepen (3)'), t('Save'));
	}
	
	public function testValidUploadImages() {
		
		$this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->unicef_user->uid, 'field_fieldtrip_places' => '')));
		
		// populating the fieldtrip create for
		//$fullReportSubmit['taxonomy_vocabulary_6[und][]'] = array(82);
		$this->assertNoField('taxonomy_vocabulary_6[und][]', 'District field was removed from fieldtrip add form');
		$fullReportSubmit['title'] = 'YES WE CAN';
		$fullReportSubmit['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
		$fullReportSubmit['field_fieldtrip_proms_ta_id[und][0][value]'] = 76;
		$fullReportSubmit['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 236;
		$fullReportSubmit['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
		$fullReportSubmit['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
		$fullReportSubmit['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
		$this->drupalPost(NULL, $fullReportSubmit, t('Save'), array('query' => array('field_fieldtrip_user' => $this->unicef_user->uid, 'field_fieldtrip_places' => '')));
		//
		$this->assertText(t('has been created.'), ('field trip is created successifuly'), 'DevTrac');
		//
		$nodeAddreportfullSubmit11 = $this->drupalGetNodeByTitle($fullReportSubmit["title"]);
		$this->assertNotNull($nodeAddreportfullSubmit11, t('node loaded'));
		$this->assertLink('Add a Site Report to the Field Trip.', 0, t('link to add site reports to fieldtrip'));
		$this->drupalGet('node/'.$nodeAddreportfullSubmit11->nid.'/addplaceform/ajax/nojs/go', array('query'=>array('destination'=>'node/'.$nodeAddreportfullSubmit11->nid)));
		//$this->drupalGet('node/'.$nodeAddreportfullSubmit11->nid.'/addplaceform/ajax/nojs/go', array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
		$formSubmitreports['reporttype'] = 1;
		$formSubmitreports['district'] = 82;
		$this->drupalPost(NULL, $formSubmitreports, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
		$this->assertNoLink('Create New Location', 0, 'clicked');
		$this->drupalGet('node/add/ftritem/'.$formSubmitreports['district'], array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
		$this->assertField('title', 'title field is showing');
		//$ftr['field_ftritem_public_summary[und][0][value]'] = $this->randomString(35);
		//$ftr['field_ftritem_narrative[und][0][value]'] = $this->randomString(35);
		$ftr['taxonomy_vocabulary_8[und][]'] = array(323);
		$ftr['title'] = $this->randomString(12);
		$ftr['taxonomy_vocabulary_6[und]'] = $formSubmitreports['district'];
		$ftr['taxonomy_vocabulary_7[und]'] = _devtrac7_site_report_tid('Roadside Observation');
		$ftr['files[field_ftritem_images_und_0]'] = 'sites/default/themes/devtrac7_theme/images/ws_pandas_in_love_1920x1200.jpg';
		$this->drupalPost(NULL, $ftr, t('Save'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
	
		//now we access edit the site report submission form

		//$this->drupalPost(NULL, $locationAddFull, t('Save'), array('query' => array('edit[taxonomy_vocabulary_6][und]' => 82, 'destination' => 'places/' .$locationAddFull['taxonomy_vocabulary_6[und]'].'/'. $nodeAddreportfullSubmit11->nid)));
		$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('assertive messages are removed'), 'Devtrac');
		$this->assertNoText(t('Copied District on the Site Report.'), t('User assertive messages are removed'), 'Devtrac');
		$this->assertNoText(t('Copied Place Type to Site Report.'), t('User assertive messages are removed'), 'Devtrac');
		$this->assertNoText(t('has been created.'), t('Place has been created.'), 'Devtrac');
		$this->assertNoText(t('Defaulted Date Visited to Start Date of Field Trip.'), t('Defaulted Date Visited to Start Date of Field Trip.'), 'Devtrac');
		//
		$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('Copied Lat-Lon to the Site Report.'), 'Devtrac');
		$this->assertNoText(t('Subjects set.'), t('Subjects set.'), 'Devtrac');
		$this->assertNoText(t('Field Trip Report Item YES THAT IS FOR NOW! has been updated.'), t('Subjects set.'), 'Devtrac');
		$this->assertNoLink('Submit', 0, t('link to submit the site report is found'), 'Devtrac');
		$this->assertNoLink('Submit the Field Trip to the manager', 0, t('link Submit the Field Trip to the manager is showing'), 'Devtrac');
		
		
	}

	/**
	 * Trying to create a site report but uploaded a photo
	 * with no or invalid file extension.
	 * creation must fail!
	 *
	 *
	 *
	 *
	 */
	public function testSiteReportSubmitInvalidPhoto() {
		$this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->unicef_user->uid, 'field_fieldtrip_places' => '')));
		$this->assertText(t('TA Number'), t('TA number field is found'), 'DevTrac');
		$percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
		// populating the fieldtrip create form
		//$fullReportSubmit1['taxonomy_vocabulary_6[und][]'] = array(82);
		$this->assertNoField('taxonomy_vocabulary_6[und][]', 'District field was removed from fieldtrip add form');
		$fullReportSubmit1['title'] = 'YES WE CAN';
		$fullReportSubmit1['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
		$fullReportSubmit1['field_fieldtrip_proms_ta_id[und][0][value]'] = 100;
		$fullReportSubmit1['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 236;
		$fullReportSubmit1['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
		$fullReportSubmit1['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
		$fullReportSubmit1['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
		$this->drupalPost('node/add/fieldtrip', $fullReportSubmit1, t('Save'), array('query' => array('field_fieldtrip_user' => $this->unicef_user->uid, 'field_fieldtrip_places' => '')));
		//
		$this->assertText(t('has been created.'), ('field trip is created successifuly'), 'DevTrac');
		//
		$nodeAddreportfullSubmit11 = $this->drupalGetNodeByTitle($fullReportSubmit1["title"]);
		$this->assertNotNull($nodeAddreportfullSubmit11, t('node loaded'));
		$this->drupalGet('node/'.$nodeAddreportfullSubmit11->nid.'/addplaceform/ajax/nojs/go', array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
		$formSubmitreports1['reporttype'] = 1;
		$formSubmitreports1['district'] = 82;
		//$formSubmitreports1['placetype'] = 1;
		$this->drupalPost('node/'.$nodeAddreportfullSubmit11->nid.'/addplaceform/ajax/nojs/go', $formSubmitreports1, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmit11->nid)));
		//
		// now fill in the Edit Field Trip Report Item Site Visit form
		$ditnarrative1['title'] = 'YES THAT IS FOR NOW!';
		$ditnarrative1['taxonomy_vocabulary_7[und]'] = _devtrac7_site_report_tid('Roadside Observation');
		$ditnarrative1['taxonomy_vocabulary_6[und]'] = $formSubmitreports1['district'];
		$ditnarrative1['field_ftritem_narrative[und][0][value]'] = 'dsdvsdsdsdssy89488';
		//$ditnarrative1['field_ftritem_public_summary[und][0][value]'] = $this->randomName(15);
		$ditnarrative1['taxonomy_vocabulary_8[und][]'] = array(326);
		$ditnarrative1['files[field_ftritem_images_und_0]'] = 'sites/default/themes/devtrac7_theme/images/panda';
		$this->drupalPost(NULL, $ditnarrative1, t('Save'), array('query' => array('destination' => 'node/'.$nodeAddreportfullSubmit11->nid)));
		$this->assertNoText(t('Defaulted Date Visited to Start Date of Field Trip.'), t('Defaulted Date Visited to Start Date of Field Trip.'), 'Devtrac');
		$this->assertNoLink('Change the narrative of the' . $ditnarrative1['title'] . '.', 0, t('Clicked the change narrative of the site Report '));
		//
		$this->assertText(t('The specified file panda. could not be uploaded. Only files with the following extensions are allowed: png gif jpg jpeg.'), t('The specified file panda. could not be uploaded. It doesnt have the known image extensions'), 'Devtrac');
		$this->assertText(t('For security reasons, your upload has been renamed to panda..'), t('For security reasons, User upload has been renamed to panda..'), 'Devtrac');
		$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('Did not copy Lat-Lon to the Site Report.'), 'Devtrac');
		$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('Did not copy Lat-Lon to the Site Report.'), 'Devtrac');
		$this->assertNoText(t('Subjects set.'), t('Subjects set.'), 'Devtrac');
		$this->assertNoText(t('Field Trip Report Item YES THAT IS FOR NOW! has been updated.'), t('Subjects not set.'), 'Devtrac');
		$this->assertNoLink('Submit', 0, t('link to submit the site report is found'), 'Devtrac');
		$this->assertNoLink('Submit the Field Trip to the manager', 0, t('link Submit the Field Trip to the manager is not showing'), 'Devtrac');
	
	}
	
	/**
	 * Editing fieltrip report item site visit public summary exceeds required 600 characters
	 * uploads an image with a valid image extension.
	 *
	 *
	 *
	 */
}




