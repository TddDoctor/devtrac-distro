<?php

module_load_include('test', 'simpletest_clone');

/**
 * Functional tests for users inter role coalition.
 */
class FieldtripUserDistrictsTest1Case extends SimpleTestCloneTestCase {
  protected $admin_user;
  protected $manager_user;
  protected $unicef_user;
  protected $edit_user;
  public static function getInfo() {
    return array(
      'name' => 'Create user coalition district',
      'description' => "Unicef User create coalition district",
      'group' => 'Devtrac',
  
    );
  } 
  
  
  /**
   * (non-PHPdoc)
   * @see SimpleTestCloneTestCase::setUp()
   *
   * 1. Create a new User with all permissions of role "Unicef" (rid = 5).
   * 2. Log the user into the system.
   */
  /**
   * Log in a user with the internal browser.
   *
   * If a user is already logged in, then the current user is logged out before
   * logging in the specified user.
   *
   * Please note that neither the global $user nor the passed in user object is
   * populated with data of the logged in user. If you need full access to the
   * user object after logging in, it must be updated manually. If you also need
   * access to the plain-text password of the user (set by drupalCreateUser()),
   * e.g. to login the same user again, then it must be re-assigned manually.
   * For example:
   * @code
   *   // Create a user.
   *   $account = $this->drupalCreateUser(array());
   *   $this->drupalLogin($account);
   *   // Load real user object.
   *   $pass_raw = $account->pass_raw;
   *   $account = user_load($account->uid);
   *   $account->pass_raw = $pass_raw;
   * @endcode
   *
   * @param $user
   *   User object representing the user to login.
   *
   * @see drupalCreateUser()
   */
  protected function drupalLogin(stdClass $user) {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  
  	$edit = array(
  			'name' => $user->name,
  			'pass' => $user->pass_raw
  	);
  	
  	$this->drupalPost('user', $edit, t('Log in'));
  
  	// If a "log out" link appears on the page, it is almost certainly because
  	// the login was successful.
  	$pass = $this->assertLink(t('Sign out'), 0, t('User %name successfully logged in.', array('%name' => $edit['name'])), t('User login'));
  
  	if ($pass) {
  		$this->loggedInUser = $user;
  	}
  }
  
  public function setUp() {
  	parent::setUp();
  	$this->admin_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules'));
  	$this->manager_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules'));
  	$this->edit_user = $this->drupalCreateUser(array('administer users', 'administer permissions', 'access user profiles', 'administer site configuration', 'administer modules'));
  	$this->drupalLogin($this->admin_user);
  	$this->drupalPost('user/' . $this->admin_user->uid . '/edit', array("roles[3]" => 3, 'field_user_firstname[und][0][value]' => 'ozzx', 'field_user_surname[und][0][value]' => 'xzzo', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'Jan van Diepen (3)'), t('Save'));
  	
   }
   /**
    * 
    * 
    */
  
   public function testAdminroleInterdependencestest() {
   	 $this->drupalGet('user/'.$this->admin_user->uid);
   	 if ($this->loggedInUser) {
   	 	$this->drupalLogout();
   	 }
   	 $this->drupalLogin($this->manager_user);
   	 $this->drupalGet('user/'.$this->manager_user->uid);
   	 $this->assertNoText(t('Manager:'), t('manager field is not showing as is not yet in the sytem showing'), 'Devtrac');
   }
   
   /**
    * this was meant to test multiple districts
    * and there was a change in the requirements
    * 
    */
   public function testUserMultiDistrictsSelectiontest() {
   	$this->drupalGet('node/add/fieldtrip', array('query' => array('field_fieldtrip_user' => $this->manager_user->uid, 'field_fieldtrip_places' => '')));
   	$this->assertText(t('TA Number'), t('TA number field is found'), 'DevTrac');
   	$percentage = array('field_fieldtrip_fc_purpose_percent[und][0][value]' =>78);
   	// populating the fieldtrip create form
   	//$fullReportSubmitozyq['taxonomy_vocabulary_6[und][]'] = array(80, 81, 82);
   	$this->assertNoField('taxonomy_vocabulary_6[und][', 'District field is nolonger found on add field trip form');
   	$fullReportSubmitozyq['title'] = 'YES WE CAN';
   	$fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_descr][und][0][value]'] = $this->randomName(32);
   	$fullReportSubmitozyq['field_fieldtrip_proms_ta_id[und][0][value]'] = 76;
   	$fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_fc_purpose_purps][und]'] = 236;
   	$fullReportSubmitozyq['field_fieldtrip_fc_purpose[und][0][field_fieldtrip_purpose_percent][und][0][value]'] = 100;
   	$fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value][date]'] = '26/09/2012';
   	$fullReportSubmitozyq['field_fieldtrip_start_end_date[und][0][value2][date]'] = '26/10/2012';
   	$this->drupalPost(NULL, $fullReportSubmitozyq, t('Save'), array('query' => array('field_fieldtrip_user' => $this->manager_user->uid, 'field_fieldtrip_places' => '')));
   	//
   	$this->assertText(t('has been created.'), ('field trip is created successifuly'), 'DevTrac');
   	//
   	$nodeAddreportfullSubmitozyq = $this->drupalGetNodeByTitle($fullReportSubmitozyq["title"]);
   	$this->assertNotNull($nodeAddreportfullSubmitozyq, t('node loaded'));
   	$this->assertNoLink('Add a location to the Field Trip.', 0, t('link to add Location to fieldtrip is no longer showing'));
   	$this->drupalGet('node/'.$nodeAddreportfullSubmitozyq->nid.'/addplaceform/ajax/nojs/go', array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
   	$formSubmitreportsozyq['reporttype'] = 2;
   	$formSubmitreportsozyq['district'] = 80;
   	//$formSubmitreportsozyq['placetype'] = 2;
   	$this->assertNoField('placetype', 'Place Type field is no longer found on on the site report form', 'Devtrac');
   	$this->drupalPost('node/'.$nodeAddreportfullSubmitozyq->nid.'/addplaceform/ajax/nojs/go', $formSubmitreportsozyq, t('Submit'), array('query' => array('destination' => 'node/' . $nodeAddreportfullSubmitozyq->nid)));
   	//$this->drupalGet('node/add/place/'. $formSubmitreports, array('query' => array('edit[taxonomy_vocabulary_6][und]' => 81, 'destination' => 'places/' .$fullReportSubmit['taxonomy_vocabulary_6[und][]'].'/'. $nodeAddreportfullSubmit11->nid.'/' . _devtrac7_site_report_tid('Site Visit'))));
   	//name field
   	$this->assertNoLink('Create New Location', 0, 'link Create new location found');
   	//$this->clickLink('Create New Location', 0, 'Link to add location clicked');
   	$locationAddFullozyq['title'] = $this->randomName(32);
   	$locationAddFullozyq['taxonomy_vocabulary_1[und]'] = 3;
   	$locationAddFullozyq['taxonomy_vocabulary_6[und]'] = 80;
   	$locationAddFullozyq['field_place_lat_long[und][0][geom]'] = 'POINT (31.768699645996 3.228319883347)';
   	$this->drupalPost(NULL, $locationAddFullozyq, t('Save'), array('query' => array('edit[taxonomy_vocabulary_6][und]' => 80, 'destination' => 'places/' . $locationAddFullozyq['taxonomy_vocabulary_6[und]'].'/'. $nodeAddreportfullSubmitozyq->nid.'/' . _devtrac7_site_report_tid('Human Interest Story'))));
   	$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('User Added the location on the map'), 'Devtrac');
   	$this->assertNoText(t('Copied District on the Site Report.'), t('User Added the location on the map'), 'Devtrac');
   	$this->assertNoText(t('Copied Place Type to Site Report.'), t('User Copied Place Type to Site Report.'), 'Devtrac');
   	$this->assertText(t('has been created.'), t('Place has been created.'), 'Devtrac');
   	$this->assertNoText('An illegal choice has been detected. Please contact the site administrator.');
   	$this->assertNoText(t('Defaulted Date Visited to Start Date of Field Trip.'), t('Defaulted Date Visited to Start Date of Field Trip.'), 'Devtrac');
   	//now we access edit the site report submission form
   	//and fill in the Edit Field Trip Report Item Site Visit form
		$this->drupalGet('node/add/ftritem/'.$locationAddFullozyq['taxonomy_vocabulary_6[und]'], array('query' => array('destination' => 'node/'.$nodeAddreportfullSubmitozyq->nid.'/fieldtrip_content_first/fieldtrip_content_first/edit-field-ftritem-narrative')));
   	$ditnarrativeozyq['title'] = 'YES THAT IS IT FOR NOW!';
   	$ditnarrativeozyq['taxonomy_vocabulary_6[und]'] = array(80, 81, 82);
   	$ditnarrativeozyq['field_ftritem_narrative[und][0][value]'] = $this->randomName(30);
   	$ditnarrativeozyq['field_ftritem_public_summary[und][0][value]'] = $this->randomName(15);
    $ditnarrativeozyq['field_ftritem_lat_long[und][0][geom]'] = 'POINT(33.346199035645 2.911979913712)';
   	$ditnarrativeozyq['taxonomy_vocabulary_8[und][]'] = array(326);
   	$ditnarrativeozyq['files[field_ftritem_images_und_0]'] = 'sites/default/themes/devtrac7_theme/images/ws_pandas_in_love_1920x1200.jpg';
   	$this->drupalPost(NULL, $ditnarrativeozyq, t('Save'), array('query' => array('destination' => 'node/'.$nodeAddreportfullSubmitozyq->nid.'/fieldtrip_content_first/fieldtrip_content_first/edit-field-ftritem-narrative')));
   	$this->assertNoText(t('Public Summary cannot be longer than 600 characters but is currently 650 characters long.'), t('Public Summarycannot be longer than 600 characters but is currently 650 characters long.'), 'Devtrac');
   	$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('Copied Lat-Lon to the Site Report.'), 'Devtrac');
   //
   	$this->assertNoText(t('Copied Lat-Lon to the Site Report.'), t('Copied Lat-Lon to the Site Report.'), 'Devtrac');
   	$this->assertNoText(t('Subjects set.'), t('Subjects set.'), 'Devtrac');
   	$this->assertNoText(t('Field Trip Report Item YES THAT IS IT FOR NOW! has been updated.'), t('Subjects set.'), 'Devtrac');
   	$this->assertNoLink('Submit', 0, t('link to submit the site report is not found'), 'Devtrac');
   	$this->assertNoLink('Submit the Field Trip to the manager', 0, t('link Submit the Field Trip to the manager is not showing'), 'Devtrac');
   	//now follow the submit link to submit the site report. the manager
   	$this->drupalGet('node/'.$nodeAddreportfullSubmitozyq->nid.'/setstatus/submit', array('query' => array('destination' => 'user/'.$this->manager_user->uid)));
   	$this->assertLink('YES WE CAN', 0, t('field trip YES WE CAN is found in the manager inbox'), 'DevTrac');
   	//log out the authenticated user
   	$this->drupalGet('node/'.$nodeAddreportfullSubmitozyq->nid.'/approve/fieldtripcommentform/ajax/nojs/go?', array('query'=> array('destination' => '/user/'.$this->manager_user->uid)));
   	//Now login the manager to approve the site report
   	$this->assertText(t('submitted fieldtrip YES WE CAN for your approval.'), t('manager finds the field trip to approve'), 'DevTrac');
   	$this->assertLink('Needs your approval', 0, t('link to field trip to approve found'), 'DevTrac');
   	$this->assertLink('reply', 0, t('link to field trip to approve found'), 'DevTrac');
   	$commentq['comment_body[und][0][value]'] = $this->randomName(12);
   					//commenting on the submitted fieldtrip
   	$this->drupalPost('node/'.$nodeAddreportfullSubmitozyq->nid.'/approve/fieldtripcommentform/ajax/nojs/go?',$commentq, t('Save'), array('query'=> array('destination' => '/user/'.$this->manager_user->uid)));
   	$this->assertText(t('Your comment has been posted.'), t('manager message is posted successifuly'), 'DevTrac');
  
   }
   
  public function testEditUser() {
   if ($this->loggedInUser) {
    $this->drupalLogout();
    }
    $this->drupalLogin($this->manager_user);
  	$this->unicef_user = $this->drupalCreateUser(array('create field_fieldtrip_user', 'edit field_fieldtrip_user'));
  	$this->drupalLogin($this->manager_user);
  	$this->drupalPost('user/' . $this->manager_user->uid . '/edit', array("roles[5]" => 5, 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => '26', 'field_user_firstname[und][0][value]' => 'firstname', 'field_user_surname[und][0][value]' => 'lname', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'field_user_superior[und][0][target_id]' => 'Jan van Diepen (3)'), t('Save'));
  	$this->drupalGet('user/'.$this->manager_user->uid);
  	$this->assertLink('Jan van Diepen', 0, 'manager Jan van Diepen');
  	$this->drupalPost('user/' . $this->admin_user->uid . '/edit', array("roles[3]" => 3, 'field_user_firstname[und][0][value]' => 'ozzx', 'field_user_surname[und][0][value]' => 'xzzo', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'firstname lname '.'('.$this->manager_user->uid . ')'), t('Save'));
  }  
  
  /**
   * unicef user logins and should edit fellow 
   * unicef users
   * 
   */
  public function testUnicefEditorusertest() {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  	$this->drupalLogin($this->edit_user);
  	$this->drupalPost('user/' . $this->edit_user->uid . '/edit', array("roles[4]" => 4, 'field_user_firstname[und][0][value]' => 'unicefEditor', 'field_user_surname[und][0][value]' => 'editor', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'firstname lname '.'('.$this->manager_user->uid . ')'), t('Save'));
  	$this->assertNoText('Welcome, firstname', 'Welcome, firstname message not found');
  	$this->assertText('Welcome, unicefEditor', 'Welcome, unicefEditor found');
  	$this->drupalGet('users/users/firstname', array('query' => array('search_api_aggregation_1' => 'firstname')));
  	$this->assertLink('Edit', 0, 'edit link is found');
  	$this->clickLink('Edit', 0, 'edit user link is clicked');
  	
  }
  
  /**
   * Confirming that the
   * unicef user logins and access the 
   * add questionnaire 
   *
   */
  public function testUnicefEditoruserQuestionnaireAccesstest() {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  	$this->drupalLogin($this->edit_user);
  	$this->drupalPost('user/' . $this->edit_user->uid . '/edit', array("roles[4]" => 4, 'field_user_firstname[und][0][value]' => 'unicefEditor', 'field_user_surname[und][0][value]' => 'editor', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'firstname lname '.'('.$this->manager_user->uid . ')'), t('Save'));
  	$this->assertNoText('Welcome, firstname', 'Welcome, firstname message not found');
  	$this->assertText('Welcome, unicefEditor', 'Welcome, unicefEditor found');
  	$this->drupalGet('node/add/questionnaire-question');
  	$this->assertResponse(403, 'access is not denied to editor user');
  	$this->assertNoResponse(200, 'quesstionnaire page returned');
  }
  
  /**
   * unicef user logins and can not access the
   * add questionnaire
   *
   */
  public function testUnicefEditoruserEditQuestionnaireAccesstest1() {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  	$this->drupalLogin($this->edit_user);
  	$this->drupalPost('user/' . $this->edit_user->uid . '/edit', array("roles[4]" => 4, 'field_user_firstname[und][0][value]' => 'unicefEditor', 'field_user_surname[und][0][value]' => 'editor', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'firstname lname '.'('.$this->manager_user->uid . ')'), t('Save'));
  	$this->assertNoText('Welcome, firstname', 'Welcome, firstname message not found');
  	$this->assertText('Welcome, unicefEditor', 'Welcome, unicefEditor found');
  	$this->drupalGet('admin/devtrac7/edit_questions');
  	$this->assertNoResponse(403, 'access denied to editor user');
  	$this->assertResponse(200, 'No quesstionnaire page returned');
  }
  
  /**
   * Admin should access the action items
   * 
   *
   */
  public function testUnicefmanageruserEditQuestionnaireAccesstest() {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  	$this->drupalLogin($this->manager_user);
  	$this->drupalPost('user/' . $this->manager_user->uid . '/edit', array("roles[5]" => 5, 'field_user_firstname[und][0][value]' => 'unicefEditor', 'field_user_surname[und][0][value]' => 'editor', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'Jan van Diepen (3)'), t('Save'));
  	$this->assertNoText('Welcome, firstname', 'Welcome, firstname message not found');
  	$this->assertText('Welcome, unicefEditor', 'Welcome, unicefEditor found');
  	$this->drupalGet('actionitems/2013/6/snv-programme-management');
  	$this->assertResponse(200, 'No quesstionnaire page returned');
  	$this->assertText('Follow Up Task', 'Follow Up Task section is found');
  	$this->assertText('Responsible Person:', 'Responsible Person: section is found');
  	$this->assertText('SNV Programme management', 'SNV Programme management section is found');
  	$this->assertText('Add new comment', 'Add new comment section is found');
  	
  }
  
  /**
   * Unicef editor should access the action items
   *
   *
   */
  public function testUnicefEditoruserEditQuestionnaireEditorAccesstest3() {
  	if ($this->loggedInUser) {
  		$this->drupalLogout();
  	}
  	$this->drupalLogin($this->edit_user);
  	$this->drupalPost('user/' . $this->edit_user->uid . '/edit', array("roles[4]" => 4, 'field_user_firstname[und][0][value]' => 'unicefEditor', 'field_user_surname[und][0][value]' => 'editor', 'field_user_aboutme[und][0][value]' => 'aboutjan', 'taxonomy_vocabulary_5[und]' => 30, 'taxonomy_vocabulary_4[und]' => 26, 'field_user_superior[und][0][target_id]' => 'Jan van Diepen (3)'), t('Save'));
  	$this->assertNoText('Welcome, firstname', 'Welcome, firstname message not found');
  	$this->assertText('Welcome, unicefEditor', 'Welcome, unicefEditor found');
  	$this->drupalGet('actionitems/2013/6/snv-programme-management');
  	$this->assertResponse(200, 'No quesstionnaire page returned');
  	$this->assertText('Follow Up Task', 'Follow Up Task section is found');
  	$this->assertText('Responsible Person:', 'Responsible Person: section is found');
  	$this->assertText('SNV Programme management', 'SNV Programme management section is found');
  	$this->assertText('Add new comment', 'Add new comment section is found');
  
  }
} 
